##############
Misc Library
##############
.. _misc:

*******
Purpose
*******
.. _misc_purpose:

The misc library contains all casper_misc HDL modules wrapped for Simulink.
These misc blocks are essential to the design of most DSP.

===========
Bit Reverse
===========
Reverses the bit order of an unsigned input vector. Differs from the original CASPER block as it does
not require the user to specify number of bits.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| in_val         | std_logic_vector| any                       | The input vector to be reversed                                |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| out_val        | std_logic_vector| any                       | The reversed input vector                                      |  
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

----------
Parameters
----------
+----------------+---------+--------+----------------------------------------------------------------+
| Generic        | Type    | Value  | Description                                                    |
+================+=========+========+================================================================+
| Asynchronous   | Boolean | False  | If checked, the block will act in a combinatorial way. If      |
| operation      |         |        | unchecked, a registered way                                    |
+----------------+---------+--------+----------------------------------------------------------------+

===========
Edge Detect
===========
Detects the specified edge on the input signal synchronously. Output signal will then either be
equal to the input signal if polarity is set 'high', or equal to zero's if polarity 
is 'low'.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| in_sig         | std_logic_vector| any                       | The input signal on which you wish to detect an edge           |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| out_sig        | std_logic_vector| any                       | Output edge detection.                                         |  
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

----------
Parameters
----------
+----------------+---------+--------+----------------------------------------------------------------+
| Generic        | Type    | Value  | Description                                                    |
+================+=========+========+================================================================+
| Edge Type      | String  |"rising"| Options are "rising", "falling" or "both".                     |
+----------------+---------+--------+----------------------------------------------------------------+
| Output polarity| String  |"high"  | Options are "high" or "low".                                   |
+----------------+---------+--------+----------------------------------------------------------------+

=============
Armed Trigger
=============
Makes a boolean trigger signal armable.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| trig_in        | std_logic       | 1                         | Trigger signal                                                 |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| arm            | std_logic       | 1                         | Arm signal                                                     |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| trig_out       | std_logic       | 1                         | Output boolean signal                                          |  
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

=========================
Pulse Extender
=========================
Extend the high-duration of a pulse by a number of clock periods, from the rising edge.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| i_pulse        | std_logic       | 1                         | The input pulse signal                                         |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| o_pulse        | std_logic       | 1                         | The output pulse signal                                        |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

----------
Parameters
----------
+-----------------+---------+--------+---------------------------------------------------+
| Generic         | Type    | Value  | Description                                       |
+=================+=========+========+===================================================+
| Pulse Extension | Integer | 4      | The clock-period length of the pulse's high.      |
+-----------------+---------+--------+---------------------------------------------------+

=========================
Real/Imaginary to Complex
=========================
An extension of the concatenation block that concatenates two equal width vectors to produce a single "complex" vector.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| re_in          | std_logic_vector| equal to im_in'RANGE      | The input real signal                                          |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| im_in          | std_logic_vector| equal to re_in'RANGE      | The input imaginary signal                                     |  
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| c_out          | std_logic_vector| 2*width(re_in)            | The concatenation result                                       |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

----------
Parameters
----------
+----------------+---------+--------+----------------------------------------------------------------+
| Generic        | Type    | Value  | Description                                                    |
+================+=========+========+================================================================+
| Asynchronous   | Boolean | False  | If checked, the block will act in a combinatorial way. If      |
| operation      |         |        | unchecked, a registered way                                    |
+----------------+---------+--------+----------------------------------------------------------------+

=========================
Complex to Real/Imaginary
=========================
This block performs a slice of g_bit_width to split a complex vector to produce a real and imaginary vector of length
g_bit_width. Note that the bit_width supplied need not be half of the complex vector length which will cause an overlapping
of bits in the real and imaginary vectors.

-----
Ports
-----
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| Signal         | Type            | Size                      | Description                                                    |
+================+=================+===========================+================================================================+
| c_in           | std_logic_vector| any                       | The input complex signal                                       |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| re_out         | std_logic_vector| g_bit_width               | A slice result from MSB downto MSB - g_bit_width               |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+
| re_out         | std_logic_vector| g_bit_width               | A slice result from MSB - g_bit_width -1 downto 0              |
+----------------+-----------------+---------------------------+----------------------------------------------------------------+

----------
Parameters
----------
+----------------+---------+--------+----------------------------------------------------------------+
| Generic        | Type    | Value  | Description                                                    |
+================+=========+========+================================================================+
| Asynchronous   | Boolean | False  | If checked, the block will act in a combinatorial way. If      |
| operation      |         |        | unchecked, a registered way                                    |
+----------------+---------+--------+----------------------------------------------------------------+
| g_bit_width    | Natural | 8      | Specifies the size of the re_in/im_in slices.                  |
+----------------+---------+--------+----------------------------------------------------------------+