Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
| Date         : Tue Aug 11 10:41:31 2020
| Host         : talonpc running 64-bit Pop!_OS 18.04 LTS
| Command      : report_drc -file rTwoSDF_drc_routed.rpt -pb rTwoSDF_drc_routed.pb -rpx rTwoSDF_drc_routed.rpx
| Design       : rTwoSDF
| Device       : xc7vx690tffg1927-2
| Speed File   : -2
| Design State : Fully Routed
---------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 188
+-----------+------------------+-----------------------------------------------------+------------+
| Rule      | Severity         | Description                                         | Violations |
+-----------+------------------+-----------------------------------------------------+------------+
| NSTD-1    | Critical Warning | Unspecified I/O Standard                            | 1          |
| UCIO-1    | Critical Warning | Unconstrained Logical Port                          | 1          |
| CFGBVS-1  | Warning          | Missing CFGBVS and CONFIG_VOLTAGE Design Properties | 1          |
| CHECK-3   | Warning          | Report rule limit reached                           | 1          |
| DPIP-1    | Warning          | Input pipelining                                    | 54         |
| DPOP-1    | Warning          | PREG Output pipelining                              | 44         |
| DPOP-2    | Warning          | MREG Output pipelining                              | 44         |
| DPREG-4   | Warning          | DSP48E1_PregDynOpmodeZmuxP:                         | 22         |
| REQP-1839 | Warning          | RAMB36 async control check                          | 20         |
+-----------+------------------+-----------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
65 out of 65 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: in_im[11:0], in_re[11:0], out_im[17:0], out_re[17:0], ce, clk, in_val, out_val, rst.
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
65 out of 65 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: in_im[11:0], in_re[11:0], out_im[17:0], out_re[17:0], ce, clk, in_val, out_val, rst.
Related violations: <none>

CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

CHECK-3#1 Warning
Report rule limit reached  
REQP-1839 rule limit reached: 20 violations have been found.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#47 Warning
Input pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#48 Warning
Input pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#49 Warning
Input pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#50 Warning
Input pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 input gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#51 Warning
Input pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out input gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#52 Warning
Input pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 input gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#53 Warning
Input pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg input gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#54 Warning
Input pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg input gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20 output gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30 output gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/nxt_k30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out output gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 output gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out multiplier stage gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 multiplier stage gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg multiplier stage gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_im_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg multiplier stage gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/reg_sum_re_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPREG-4#1 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#2 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[10].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#3 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#4 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[11].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#5 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#6 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[1].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#7 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#8 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[2].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#9 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#10 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[3].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#11 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#12 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[4].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#13 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#14 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[5].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#15 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#16 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[6].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#17 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#18 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[7].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#19 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#20 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[8].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#21 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#22 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell gen_fft[9].u_stage/u_TwiddleMult/gen_rtl.u_CmplxMul/u_complex_mult/gen_xilinx_cmult_ip_rtl.u1/p_1_out__0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

REQP-1839#1 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[10] (net: gen_fft[10].u_stage/u_weights/sel[5]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#2 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[11] (net: gen_fft[10].u_stage/u_weights/sel[6]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#3 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[12] (net: gen_fft[10].u_stage/u_weights/sel[7]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#4 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[13] (net: gen_fft[10].u_stage/u_weights/sel[8]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#5 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[5] (net: gen_fft[10].u_stage/u_weights/sel[0]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#6 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[6] (net: gen_fft[10].u_stage/u_weights/sel[1]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#7 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[7] (net: gen_fft[10].u_stage/u_weights/sel[2]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#8 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[8] (net: gen_fft[10].u_stage/u_weights/sel[3]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#9 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_0/ADDRARDADDR[9] (net: gen_fft[10].u_stage/u_weights/sel[4]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#10 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[10] (net: gen_fft[10].u_stage/u_weights/sel[5]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#11 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[11] (net: gen_fft[10].u_stage/u_weights/sel[6]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#12 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[12] (net: gen_fft[10].u_stage/u_weights/sel[7]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#13 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[13] (net: gen_fft[10].u_stage/u_weights/sel[8]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#14 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[5] (net: gen_fft[10].u_stage/u_weights/sel[0]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#15 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[6] (net: gen_fft[10].u_stage/u_weights/sel[1]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#16 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[7] (net: gen_fft[10].u_stage/u_weights/sel[2]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#17 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[8] (net: gen_fft[10].u_stage/u_weights/sel[3]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#18 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_im_reg_1/ADDRARDADDR[9] (net: gen_fft[10].u_stage/u_weights/sel[4]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#19 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_re_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_re_reg_0/ADDRARDADDR[12] (net: gen_fft[10].u_stage/u_weights/sel[7]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#20 Warning
RAMB36 async control check  
The RAMB36E1 gen_fft[10].u_stage/u_weights/gen_reg.weight_re_reg_0 has an input control pin gen_fft[10].u_stage/u_weights/gen_reg.weight_re_reg_0/ADDRARDADDR[13] (net: gen_fft[10].u_stage/u_weights/sel[8]) which is driven by a register (gen_fft[10].u_stage/u_control/reg_count_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


